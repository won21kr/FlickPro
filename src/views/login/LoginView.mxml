<s:View xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:mx="library://ns.adobe.com/flex/mx"
		xmlns:s="library://ns.adobe.com/flex/spark"
		xmlns:controls="com.flexcapacitor.controls.*"
		viewActivate="init(event)" >
	<fx:Script>
		<![CDATA[
			import flashx.textLayout.conversion.TextConverter;
		]]>
	</fx:Script>
	
	<s:navigationContent>
		<s:Image source="@Embed('assets/images/FastrHome.png')"/>
	</s:navigationContent>
	
	<s:actionContent>
		<s:Button label="Reload login" click="onClickStart()" fontSize="12"/>
		<s:Button x="320" y="150" label="Done" 
				  click="onValidConnection()" skinClass="components.DoneButtonSkin"/>
	</s:actionContent>
	
	<fx:Declarations>
		<fx:XML id="startText" xmlns="">
			<TextFlow xmlns="http://ns.adobe.com/textLayout/2008">
				<p>3 easy steps to login:</p>
				<p>Tap 'Start' and login.</p>
				<p>Tap 'OK, I'll authorize it'.</p>
				<p>Tap 'Done'.</p>
			</TextFlow>
		</fx:XML>
	</fx:Declarations>
	
	<s:states>
		<s:State name="EstablishConnectionState"/>
		<s:State name="ConnectionErrorState"/>
		<s:State name="StartLoginState"/>
		<s:State name="WebViewState"/>
		<s:State name="ProcessingAuthState"/>
		<s:State name="SuccessState"/>
		<s:State name="AuthErrorState"/>
	</s:states>
	
	<fx:Script>
		<![CDATA[
			import views.HomeView;
			import helpers.NSIDManager;
			import helpers.TokenManager;
			import statics.Service;
			import mx.core.FlexGlobals;
			import com.adobe.webapis.flickr.AuthPerm;
			import com.adobe.webapis.flickr.AuthResult;
			import com.adobe.webapis.flickr.FlickrService;
			import com.adobe.webapis.flickr.events.FlickrResultEvent;
			//import com.flexcapacitor.controls.WebView;
			import components.MenuPopUp;
			import mx.utils.ObjectUtil;
			import spark.events.ViewNavigatorEvent;
			import statics.NSID;
			
			private var _service:FlickrService; 
			private var _frob:String;
			
			private var webView:StageWebView = new StageWebView();
			
			private function init(event:ViewNavigatorEvent=null):void{
				currentState = "EstablishConnectionState";	
				_service = Service.getService();
				_service.addEventListener( FlickrResultEvent.AUTH_GET_FROB, getFrobResponse ); 
				_service.auth.getFrob()
			}
			
			private function getFrobResponse( event:FlickrResultEvent ):void {
				if ( event.success ) {
					trace("getFrobResponse: success");
					currentState= "StartLoginState";
					_frob= String( event.data.frob );
				} else {
					
					trace("error code: " + event.data.error.errorCode + "\n");
					trace("error message: " + event.data.error.errorMessage + "\n");
					currentState = "ConnectionErrorState";
				}
			}			
			
			private function onClickStart():void{
				currentState = "WebViewState";
				webView.stage = this.stage;
				webView.viewPort = new Rectangle( 0, 80, stage.stageWidth, 700 ); 
				var auth_url:String = _service.getLoginURL( _frob, AuthPerm.WRITE );
				webView.loadURL(auth_url);
			}
			
			private function onValidConnection():void {
				webView.stage = null;//newly added
				currentState = "ProcessingAuthState";
				_service.addEventListener( FlickrResultEvent.AUTH_GET_TOKEN, getTokenResponse );
				_service.auth.getToken( _frob ); 
			}
			
			private function getTokenResponse( event:FlickrResultEvent ):void {
				trace("getTokenResponse: success = " + event.success + "\n");
				
				if ( event.success ) {
					currentState="SuccessState";
					
					var authResult:AuthResult = AuthResult( event.data.auth );
					trace(ObjectUtil.toString( authResult ) + "\n");
					
					NSID.setNSID(authResult.user.nsid);
					
					trace("LoginView: authResult.token: "+authResult.token);
					trace("LoginView: authResult.user.nsid: "+authResult.user.nsid);
					
					_service.token = authResult.token;
					TokenManager.setToken(authResult.token);
					NSIDManager.setNSID(authResult.user.nsid);
					_service.permission = authResult.perms;
					
					navigator.pushView(HomeView);
					
				} else {
					currentState="AuthErrorState";
					trace("error code: " + event.data.errorCode + "\n");
					trace("error message: " + event.data.errorMessage + "\n");
				}
			}
			
			private function _onKeyDown(event:KeyboardEvent):void
			{
				if(event.keyCode == Keyboard.BACK)
				{
					event.preventDefault();
					trace("\nBack Pressed");
				} else if(event.keyCode == Keyboard.MENU)
				{
					event.preventDefault();
					trace("\nMenu Pressed");
				} else if(event.keyCode == Keyboard.SEARCH)
				{
					event.preventDefault();
					trace("\nSearch Pressed");
				}
			}
			
		]]>
	</fx:Script>
	
	<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~EstablishConnectionState~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
	
	<s:VGroup verticalCenter="0" horizontalCenter="0" includeIn="EstablishConnectionState">
		<s:BusyIndicator scaleX = "3" scaleY="3" symbolColor="white"/>
		<s:Label text="Connecting"/>
		<s:Label text="to Flickr.com"/>
	</s:VGroup>
	
	<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ConnectionErrorState~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
	
	<s:VGroup verticalCenter="0" horizontalCenter="0" includeIn="ConnectionErrorState">
		<s:Label text="Connection Error"/>
		<s:Button label="Try Again" click="init()" skinClass="components.TryAgainButtonSkin2"/>
	</s:VGroup>	
	
	<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~StartState~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
	
	<s:VGroup id="LoginExplanation" includeIn="StartLoginState, WebViewState" 
			  fontSize="24" left="40" top="40" right="40">
		<!--<s:RichText textFlow="{TextConverter.importToFlow(startText,TextConverter.TEXT_LAYOUT_FORMAT)}" 
		height="300" color="0xffffff" right="10"/>-->
		<s:Label text="3 easy steps to start:" color="#eeeeee"/>
		<s:HGroup verticalAlign="middle">
			<s:Image source="@Embed('assets/images/NumberOne.png')"/>
			<s:Label text="Tap 'Start' and login." color="#eeeeee"/>
		</s:HGroup>
		<s:HGroup verticalAlign="middle">
			<s:Image source="@Embed('assets/images/NumberTwo.png')"/>
			<s:Label text="Tap 'OK, I'll authorize it'." color="#eeeeee"/>
		</s:HGroup>
		<s:HGroup verticalAlign="middle">
			<s:Image source="@Embed('assets/images/NumberThree.png')"/>
			<s:Label text="Tap 'Done'." color="#eeeeee"/>
		</s:HGroup>
	</s:VGroup>
	
	<s:VGroup horizontalCenter="0" verticalCenter="0" includeIn="StartLoginState">
		<s:Button label="Start" click="onClickStart()" skinClass="components.StartButtonSkin2"/>
	</s:VGroup>
	
	<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~WebViewState~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
	
	
	<!--<controls:WebView id="webView" y="100" width="100%" height="700" includeIn="WebViewState"/>-->
	<s:VGroup verticalCenter="0" horizontalCenter="0" includeIn="WebViewState">		
		<s:Label text="Loading Flickr login page..."/>
	</s:VGroup>
	
	<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ProcessingAuthState~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
	
	<s:VGroup verticalCenter="0" horizontalCenter="0" includeIn="ProcessingAuthState">
		<s:BusyIndicator scaleX = "3" scaleY="3" symbolColor="white"/>
		<s:Label text="authorization"/>
	</s:VGroup>
	
	<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~AuthErrorState~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
	
	<s:VGroup verticalCenter="0" horizontalCenter="0" includeIn="AuthErrorState">
		<s:Label text="The authorization was not"/>
		<s:Label text="completed."/>
		<s:Button label="Try Again" click="init()" skinClass="components.TryAgainButtonSkin2"/>
	</s:VGroup>
	
</s:View>
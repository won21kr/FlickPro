<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		title="Upload"
		creationComplete="init()"
		viewActivate="viewActivateHandler(event)" xmlns:debug="com.squidzoo.debug.*">
	<fx:Script>
		<![CDATA[
			import VOs.BatchUploadVO;
			
			import com.adobe.webapis.flickr.FlickrService;
			import com.squidzoo.eventSystem.EventCentral;
			import com.squidzoo.eventSystem.events.CustomDataEvent;
			
			import helpers.GalleryBrowser;
			import helpers.Uploader;
			
			import mx.collections.ArrayCollection;
			
			import spark.events.ViewNavigatorEvent;
			
			private var _browser:GalleryBrowser;
			[Bindable]
			private var _selectedImage:Bitmap;
			[Bindable]
			protected var _service:FlickrService;
			[Bindable]
			private var _title:String = "add your title";
			[Bindable]
			private var _description:String = "add your description";
			[Bindable]
			private var _tags:String = "add your tags:";
			[Bindable]
			private var _is_family:Boolean = true;
			[Bindable]
			private var _is_public:Boolean = false;
			[Bindable]
			private var _is_friend:Boolean = false;
			
			private var _uploader:Uploader;
			
			private var _fileRef:FileReference;
			
			
			[Bindable]
			private var _uploadStatus:String = "not started";
			
			[Bindable]
			private var _batchUploadAC:ArrayCollection = new ArrayCollection(new Array());
			
			private function viewActivateHandler(event:ViewNavigatorEvent):void{
				
				photoList.scroller.setStyle('horizontalScrollPolicy', 'ScrollPolicy.OFF');
				
				_service = data as FlickrService;
				
				EventCentral.getInstance().addEventListener(CustomDataEvent.REMOVE_IMAGE_FROM_UPLOAD_LIST,onRemoveImageFromList);
			}
			
			private function init():void{
				_browser = new GalleryBrowser();
			}
			
			private function onClickPickPhotoButton(event:MouseEvent):void
			{ 
				_browser.addEventListener(CustomDataEvent.GALLERY_IMAGE_SELECTED,onGalleryImageSelected);
				_browser.browse();
			}
			
			private function onGalleryImageSelected(event:CustomDataEvent):void{
				_browser.removeEventListener(CustomDataEvent.GALLERY_IMAGE_SELECTED,onGalleryImageSelected);
				
				var selectedImage:Bitmap = event.image;
			
				var vo:BatchUploadVO = new BatchUploadVO(event.fileReference,selectedImage);
				vo.fileName = event.fileReference.name;
				_batchUploadAC.addItemAt(vo,0);
				_selectedImage = selectedImage;
			}
			
			private function onClickUploadListButton():void{
				
				_uploader = new Uploader(_service);
				
				for(var i:int = 0;i <_batchUploadAC.length;i++){
					
					var vo:BatchUploadVO = _batchUploadAC[i];
					
					_uploader.upload(vo.file,_title,_description,_tags,_is_public,_is_friend,_is_family);
				}
			}
			
			private function onChooseSet():void{
				
			}
			
			protected function onRemoveImageFromList(event:CustomDataEvent):void
			{
				for(var i:int = i; i < _batchUploadAC.length; i++){
					if(event.string == _batchUploadAC[i].fileName){
						_batchUploadAC.removeItemAt(i);
					}
				}
			}
			
			protected function onClickPrivacySettingsButton(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<s:RadioButtonGroup id="PermissionRadioButtonsGroup"/>
	</fx:Declarations>
	
	<!--<s:actionContent>
		<s:Button id="menuButton" icon="@Embed(source='assets/images/menuLightGrey.png')" click="_popup.show()"/>
	</s:actionContent>-->
	<s:HGroup paddingLeft="20" paddingRight="0" paddingTop="40" width="100%" height="100%">
		<s:VGroup gap="10">
			
			<!--<s:Image id="imageContainer" width="173" height="141" source="{_selectedImage}"/>-->
			
			<s:Button id="pickPhotoButton"
					  click="onClickPickPhotoButton(event)" 
					  skinClass="components.PickaPhotoButtonSkin"/>
			
			<!--<s:Button id="ChooseSetButton" 
					click="onChooseSet()"
					skinClass="components.ChooseSetButtonSkin"/>-->
			
				<s:Button id="PrivacySettingsButton"
						  click="onClickPrivacySettingsButton(event)"
						  skinClass="components.PrivacySettingsButtonSkin"/>
			
			<s:Button click="onClickUploadListButton()" 
					  skinClass="components.UploadButtonSkin"/>
			<!--<debug:DebugTextArea width="200" height="200"/>-->
		</s:VGroup>
		
	<s:List id="photoList" width="210" height="740" dataProvider="{_batchUploadAC}"  useVirtualLayout="false"
			itemRenderer="ItemRenderers.BatchUploadItemRenderer" contentBackgroundColor="#58595b">
		<s:layout >
			<s:VerticalLayout paddingTop="10" paddingLeft="10" paddingRight="10" paddingBottom="10" gap="5"/>
		</s:layout>
	</s:List>
	
	</s:HGroup>
	
	
</s:View>

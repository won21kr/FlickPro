<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" title="SettingsView" xmlns:components="components.*"
		creationComplete="onCreationComplete(event)">
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Declarations>
		<s:RadioButtonGroup id="privacySetting" 
							itemClick="onPrivacySelection(event)"/>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import VOs.SetVO;
			import VOs.SettingsVO;
			
			import com.squidzoo.eventSystem.EventCentral;
			import com.squidzoo.eventSystem.events.CustomDataEvent;
			
			import mx.events.FlexEvent;
			private var _title:String;
			private var _description:String;
			private var _tags:String;
			private var _isPublic:Boolean;
			private var _isFriend:Boolean;
			private var _isFamily:Boolean;
			private var _setSelection:SetVO;
			[Bindable]
			private var _setTitle:String = "Please select a set.";
			
			protected function onCreationComplete(event:FlexEvent):void{
				//EventCentral.getInstance().addEventListener(CustomDataEvent.SET_SELECTED_IN_UPLOAD_SETTINGS,onSetSelected);				
			}

			private function onClickOK(event:Event):void{
				var settingsVO:SettingsVO = new SettingsVO();
				settingsVO.title = _title;
				settingsVO.description = _description;
				settingsVO.tags = _tags;
				settingsVO.is_public = _isPublic;
				settingsVO.is_family = _isFamily;
				settingsVO.is_friend = _isFriend;
				settingsVO.setVO = _setSelection;
				
				EventCentral.getInstance().dispatchEvent(new CustomDataEvent(CustomDataEvent.SETTINGS_SELECTED,null,null,null,null,null,settingsVO));
				navigator.popView();
			}
			
			private function onClickCancel(event:Event):void{
				navigator.popView();
			}
			
			private function onTitleChange(event:Event):void{
				_title = event.currentTarget.text;
				trace(_title);
			}
			
			private function onDescriptionChange(event:Event):void{
				_description = event.currentTarget.text;
				trace(_description);
			}
			
			private function onTagsChange(event:Event):void{
				_tags = event.currentTarget.text;
				trace(_tags);
			}
			
			private function onPrivacySelection(event:Event):void{
				switch(event.currentTarget.selectedValue){
					case "family":
						
						break;
					case "friend":
						break;
					case "public":
						break;
				}
			}
			
			
			
			protected function onSetSelected(event:CustomDataEvent):void
			{
				_setTitle = event.setVO.title;
				_setSelection = event.setVO;
			}
			
		]]>
	</fx:Script>
	
	
	<!--<s:SkinnableContainer left="10" right="10" top="10" bottom="10" width="100%" height="100%">-->
		
	<!--<s:SkinnableContainer height="100%" left="20" right="20" top="20" bottom="20" verticalCenter="0" horizontalCenter="0" backgroundColor="0xaaaaaa">-->
	
	<s:VGroup horizontalCenter="0" paddingTop="5" fontSize="18">
		
		<s:Label text="Title" color="#ffffff"/>
		<s:TextInput id="titleInput" width="380" change="onTitleChange(event)"/>
		<s:Label text="Description" color="#ffffff"/>
		<s:TextInput id="descriptionInput" width="380" change="onDescriptionChange(event)"/>
		<s:Label text="Tags" color="#ffffff"/>
		<s:TextInput id="tagsInput" width="380" change="onTagsChange(event)"/>
		<s:HGroup verticalCenter="0" horizontalCenter="0" color="#ffffff" horizontalAlign="center">	
			<s:RadioButton scaleX="0.9" scaleY="0.9" id="familyValue" group="{privacySetting}" value="family" label="private" />
			<s:RadioButton scaleX="0.9" scaleY="0.9" id="friendValue" group="{privacySetting}" value="friend" label="friend" />
			<s:RadioButton scaleX="0.9" scaleY="0.9" id="publicValue" group="{privacySetting}" value="public" label="public" />
		</s:HGroup>
		<s:HGroup>
			<s:VGroup>
				<components:SetList/>
				<s:Label text="Set selection: {_setTitle}" color="#ffffff"/>	
			</s:VGroup>
		</s:HGroup>
		<s:HGroup paddingLeft="220">
			<s:Button label="ok" click="onClickOK(event)"/>
			<s:Button label="cancel" click="onClickCancel(event)"/>
		</s:HGroup>
		
	</s:VGroup>

	
	<!--</s:SkinnableContainer>-->

</s:View>

<s:View xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:mx="library://ns.adobe.com/flex/mx"
		xmlns:s="library://ns.adobe.com/flex/spark"
		xmlns:controls="com.flexcapacitor.controls.*"
		viewActivate="init(event)" >
	<fx:Script>
		<![CDATA[
			import flashx.textLayout.conversion.TextConverter;
		]]>
	</fx:Script>
	
	<s:navigationContent>
		<s:Image source="@Embed('assets/images/FastrLP6.png')"/>
	</s:navigationContent>
	
	<s:actionContent>
		<s:Button label="Reload login" click="onClickStart()" includeIn="WebViewState" fontSize="12"/>
		<s:Button x="320" y="150" label="Done" 
				  click="onValidConnection()" includeIn="WebViewState" skinClass="components.DoneButtonSkin"/>
	</s:actionContent>
	
	<fx:Declarations>
		<fx:XML id="startText" xmlns="">
			<TextFlow xmlns="http://ns.adobe.com/textLayout/2008">
				<p>Follow these simple steps to login:</p>
				<p>1. Click 'Start' and login to Flickr.</p>
				<p>2. Click the BLUE 'OK, I'll authorize it' button on Flickr.</p>
				<p>3. Click the 'Done' button.</p>
			</TextFlow>
		</fx:XML>
	</fx:Declarations>
	
	<s:states>
		<s:State name="EstablishConnectionState"/>
		<s:State name="ConnectionErrorState"/>
		<s:State name="StartLoginState"/>
		<s:State name="WebViewState"/>
		<s:State name="ProcessingAuthState"/>
		<s:State name="SuccessState"/>
		<s:State name="AuthErrorState"/>
	</s:states>
	
	<fx:Script>
		<![CDATA[
			import statics.Service;
			import mx.core.FlexGlobals;
			import com.adobe.webapis.flickr.AuthPerm;
			import com.adobe.webapis.flickr.AuthResult;
			import com.adobe.webapis.flickr.FlickrService;
			import com.adobe.webapis.flickr.events.FlickrResultEvent;
			//import com.flexcapacitor.controls.WebView;
			import components.MenuPopUp;
			import mx.utils.ObjectUtil;
			import spark.events.ViewNavigatorEvent;
			import statics.NSID;
			
			private var _service:FlickrService; 
			private var _frob:String;
			
			private var webView:StageWebView = new StageWebView();
			
			//private var _locationCounter:int = 0;
			//private var _currentLocation:String = "nowhere";
			
			//private var _startClicked:Boolean = false;
			
			private function init(event:ViewNavigatorEvent=null):void{
				currentState = "EstablishConnectionState";	
				
				//_service = data as FlickrService;	
				_service = Service.getService();
				_service.addEventListener( FlickrResultEvent.AUTH_GET_FROB, getFrobResponse ); 
				_service.auth.getFrob();
				
				webView.addEventListener(LocationChangeEvent.LOCATION_CHANGE,onLocationChange);
			}
			
			private function getFrobResponse( event:FlickrResultEvent ):void {
				
				if ( event.success ) {
					trace("getFrobResponse: success");
					currentState= "StartLoginState";
					_frob= String( event.data.frob );
					
				} else {
					
					trace("error code: " + event.data.error.errorCode + "\n");
					trace("error message: " + event.data.error.errorMessage + "\n");
					currentState = "ConnectionErrorState";
					
				}
			}			
			
			private function onClickStart():void{
				//_startClicked = true;
				//_locationCounter++;
				currentState = "WebViewState";
				webView.stage = this.stage;
				webView.viewPort = new Rectangle( 0, 80, stage.stageWidth, 700 ); 
				var auth_url:String = _service.getLoginURL( _frob, AuthPerm.WRITE );
				webView.loadURL(auth_url);//webView.load(auth_url)
			}
			
			
			
			private function onValidConnection():void {
				webView.stage = null;//newly added
				currentState = "ProcessingAuthState";
				_service.addEventListener( FlickrResultEvent.AUTH_GET_TOKEN, getTokenResponse );
				_service.auth.getToken( _frob ); 
			}
			
			private function getTokenResponse( event:FlickrResultEvent ):void {
				trace("getTokenResponse: success = " + event.success + "\n");
				
				if ( event.success ) {
					currentState="SuccessState";
					
					var authResult:AuthResult = AuthResult( event.data.auth );
					trace(ObjectUtil.toString( authResult ) + "\n");
					
					NSID.setNSID(authResult.user.nsid);
					
					_service.token = authResult.token;
					_service.permission = authResult.perms;
					
					//username.text = authResult.user.username + " (" + authResult.user.fullname + " )";
					
					trace("token: " + _service.token + "\n");
					trace("perms: " + _service.permission + "\n");
					
					navigator.pushView(HomeView);
					
				} else {
					currentState="AuthErrorState";
					trace("error code: " + event.data.errorCode + "\n");
					trace("error message: " + event.data.errorMessage + "\n");
				}
			}
			
			
			/**
			 * @copy mx.core.UIComponent#updateDisplayList()
			 * */
			/*
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void {
			var runtimeDPI:int = FlexGlobals.topLevelApplication.runtimeDPI;
			var applicationDPI:int = FlexGlobals.topLevelApplication.applicationDPI;
			var point:Point;
			var scaledWidth:int;
			var scaledHeight:int;
			var scaleFactor:Number;
			var scaledY:int;
			
			// NOTE: IF THE WEBVIEW IS NOT BEING SIZED CORRECTLY
			// check if focusEnabled is true. If it is then the soft keyboard may not be dispatching the
			// deactivate event because the webview has focus when it is dispatched. set to false
			// position according to the container rather than the stage
			if (webView) {
			point = localToGlobal(new Point());
			scaleFactor = runtimeDPI / applicationDPI;
			
			scaledWidth = width * scaleFactor;
			scaledHeight = height * scaleFactor;
			
			webView.viewPort = new Rectangle(point.x, point.y, scaledWidth, scaledHeight);
			
			
			}
			
			}
			*/
			
			protected function onLocationChange(event:LocationChangeEvent):void
			{
				//onClickStart();
			}
			
		]]>
	</fx:Script>
	
	<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~EstablishConnectionState~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
	
	<s:VGroup verticalCenter="0" horizontalCenter="0" includeIn="EstablishConnectionState">
		<s:BusyIndicator scaleX = "3" scaleY="3"/>
		<s:Label text="Connecting"/>
		<s:Label text="to Flickr.com"/>
	</s:VGroup>
	
	<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ConnectionErrorState~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
	
	<s:VGroup verticalCenter="0" horizontalCenter="0" includeIn="ConnectionErrorState">
		<s:Label text="Connection Error"/>
		<s:Button label="Try Again" click="init()" skinClass="components.TryAgainButtonSkin2"/>
	</s:VGroup>	
	
	<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~StartState~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
	
	<s:VGroup id="LoginExplanation" includeIn="StartLoginState, WebViewState" 
			  fontSize="18" left="20" top="20" right="20">
		<s:RichText textFlow="{TextConverter.importToFlow(startText,TextConverter.TEXT_LAYOUT_FORMAT)}" height="300"/>
	</s:VGroup>
	
	<s:VGroup horizontalCenter="0" verticalCenter="0" includeIn="StartLoginState">
		<s:Button label="Start" click="onClickStart()" skinClass="components.StartButtonSkin2"/>
	</s:VGroup>
	
	<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~WebViewState~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
	
	
	<!--<controls:WebView id="webView" y="100" width="100%" height="700" includeIn="WebViewState"/>-->
	<s:VGroup verticalCenter="0" horizontalCenter="0" includeIn="WebViewState">		
		<s:Label text="Loading Flickr login page..."/>
	</s:VGroup>
	
	<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ProcessingAuthState~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
	
	<s:VGroup verticalCenter="0" horizontalCenter="0" includeIn="ProcessingAuthState">
		<s:BusyIndicator scaleX = "3" scaleY="3"/>
		<s:Label text="authorization"/>
	</s:VGroup>
	
	<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~SuccessState~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
	<!--
	<s:VGroup verticalCenter="0" horizontalCenter="0" includeIn="SuccessState">
		<s:Label text="You have logged in as"/>
		<s:Label id="username" text="username"/>
		<s:Label text="and have authorized Flickit to"/>
		<s:Label text="access your Flickr photos"/>
		<s:Button click="navigator.pushView(BatchUploadView, _service)" />		 
	</s:VGroup>
	-->
	<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~AuthErrorState~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
	
	<s:VGroup verticalCenter="0" horizontalCenter="0" includeIn="AuthErrorState">
		<s:Label text="The authorization was not"/>
		<s:Label text="completed."/>
		<s:Button label="Try Again" click="init()"/>
	</s:VGroup>
	
</s:View>
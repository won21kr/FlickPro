<?xml version="1.0" encoding="utf-8"?>
<s:ViewNavigatorApplication xmlns:fx="http://ns.adobe.com/mxml/2009"
							xmlns:s="library://ns.adobe.com/flex/spark"
							creationComplete="init(event)" resize="onResize()"
							splashScreenImage="FlickrSplashScreen"
							splashScreenMinimumDisplayTime="1500">
	
	<fx:Style source="styles/MainStyle.css"/>
	
	<fx:Script>
		<![CDATA[
			import com.squidzoo.VOs.DataObject;
			
			import com.squidzoo.callouts.MainMenuCallout;
			
			import com.adobe.webapis.flickr.AuthPerm;
			import com.adobe.webapis.flickr.FlickrService;
			import com.squidzoo.eventSystem.EventCentral;
			import com.squidzoo.eventSystem.events.CustomDataEvent;
			import com.squidzoo.eventSystem.events.CustomEvent;
			
			import flash.sampler.NewObjectSample;
			
			import com.squidzoo.helpers.NSIDManager;
			import com.squidzoo.helpers.TokenManager;
			
			import mx.core.UIComponent;
			import mx.events.FlexEvent;
			
			import spark.components.Application;
			import spark.events.PopUpEvent;
			import spark.transitions.ViewTransitionDirection;
			import spark.transitions.ZoomViewTransition;
			import spark.transitions.ZoomViewTransitionMode;
			
			import com.squidzoo.statics.Keys;
			import com.squidzoo.statics.NSID;
			import com.squidzoo.statics.Service;
			import com.squidzoo.statics.ViewTypes;
			
			import com.squidzoo.views.AboutView;
			import com.squidzoo.views.BrowseSets;
			import com.squidzoo.views.HomeView;
			import com.squidzoo.views.MultiplePhotosView;
			import com.squidzoo.views.SearchView;
			import com.squidzoo.views.login.LoginView;
			import com.squidzoo.views.singlePhoto.SinglePhotoView;
			import com.squidzoo.views.upload.BatchUploadView;
			
			public var _service:FlickrService;
			
			private var _isTablet:Boolean=false;
			
			private var _menuCallout:MainMenuCallout=new MainMenuCallout();
			
			public function isTablet():Boolean
			{
				return _isTablet;
			}
			
			private function onResize():void
			{
				_isTablet=height > 960 || width > 960;
				
				if (_isTablet)
				{
					trace("isTablet");
				}
				else
				{
					trace("isPhone");
				}
			}
			
			private function init(event:FlexEvent):void
			{
				addEventListener(Event.ADDED_TO_STAGE, onAddedToStage);
				
				_service=new FlickrService();
				
				Service.setService(_service);
				
				_service.api_key=Keys.getApiKey();
				_service.secret=Keys.getSecretKey();
				_service.permission=AuthPerm.WRITE;
				
				if (TokenManager.isValid() == true)
				{
					_service.token=TokenManager.getToken();
					NSID.setNSID(NSIDManager.getNSID());
					
					var dataObject:DataObject=new DataObject();
					dataObject.viewType=ViewTypes.PHOTO_STREAM;
					navigator.pushView(MultiplePhotosView, dataObject);
				}
				else
				{
					navigator.pushView(com.squidzoo.views.login.LoginView);
				}
				
				addMenuListeners();
			}
			
			private function onAddedToStage(event:Event):void
			{
				removeEventListener(Event.ADDED_TO_STAGE, onAddedToStage);
				stage.addEventListener(KeyboardEvent.KEY_DOWN, _onKeyDown);
			}
			
			private function addMenuListeners():void
			{
				EventCentral.getInstance().addEventListener(CustomEvent.ACTIONBAR_MENU_ICON_CLICKED_UPLOAD, onUpload);
				EventCentral.getInstance().addEventListener(CustomEvent.ACTIONBAR_MENU_ICON_CLICKED_BROWSE_SETS, onBrowseSets);
				EventCentral.getInstance().addEventListener(CustomEvent.ACTIONBAR_MENU_ICON_CLICKED_PHOTOSTREAM, onPhotostream);
				EventCentral.getInstance().addEventListener(CustomEvent.ACTIONBAR_MENU_ICON_CLICKED_SEARCH, onSearch);
			}
			
			private function onUpload(event:CustomEvent):void
			{
				navigator.pushView(BatchUploadView, _service);
			}
			
			private function onBrowseSets(event:CustomEvent):void
			{
				navigator.pushView(BrowseSets, _service);
			}
			
			public function getService():FlickrService
			{
				return _service;
			}
			
			protected function onPhotostream(event:Event):void
			{
				var dataObject:DataObject=new DataObject();
				dataObject.viewType=ViewTypes.PHOTO_STREAM;
				navigator.pushView(MultiplePhotosView, dataObject);
			}
			
			protected function onSearch(event:Event):void
			{
				navigator.pushView(SearchView);
			}
			
			private function _onKeyDown(event:KeyboardEvent):void
			{
				if (event.keyCode == Keyboard.MENU)
				{
					openMainMenuCallout(mainMenuButton, spark.components.ContentBackgroundAppearance.NONE);
				}
				else if (event.keyCode == Keyboard.SEARCH)
				{
					event.preventDefault();
				}
			}
			
			private function openMainMenuCallout(owner:UIComponent, value:String):void
			{
				_menuCallout.addEventListener('close', closeMainMenuCalloutHandler);
				_menuCallout.setStyle('contentBackgroundAppearance', value);
				_menuCallout.open(owner);
			}
			
			private function closeMainMenuCalloutHandler(event:PopUpEvent):void
			{
				if (!event.commit)
					return;
				
				_menuCallout.removeEventListener('close', closeMainMenuCalloutHandler);
				
				selectView(event.data.selection);
			}
			
			private function selectView(selection:String):void
			{
				switch (selection)
				{
					case "upload":
						navigator.pushView(BatchUploadView, _service);
						break;
					case "search":
						navigator.pushView(SearchView);
						break;
					case "photostream":
						var dataObject:DataObject=new DataObject();
						dataObject.viewType=ViewTypes.PHOTO_STREAM;
						navigator.pushView(MultiplePhotosView, dataObject);
						break;
					case "sets":
						navigator.pushView(BrowseSets, _service);
						break;
					case "about":
						navigator.pushView(AboutView);
						break;
					case "account":
						navigator.pushView(LoginView);
						break;
					case "exit":
						NativeApplication.nativeApplication.exit();
						break;
				}
			}
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<s:MultiDPIBitmapSource id="mainMenuIcons"
								source160dpi="@Embed('assets/images/v2/icon72Flickr.png')"
								source240dpi="@Embed('assets/images/v2/icon48Flickr.png')"/>
	</fx:Declarations>
	
	<s:navigationContent>
		<s:Button id="mainMenuButton"
				  click="openMainMenuCallout(mainMenuButton, spark.components.ContentBackgroundAppearance.NONE)"
				  color="0xffa500" icon="{mainMenuIcons}"/>
	</s:navigationContent>
	
	
	
</s:ViewNavigatorApplication>

<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark"
				height="100%" width="225"
				autoDrawBackground="false"
				contentBackgroundAlpha="0"
				creationComplete="creationCompleteHandler(event)" 
				xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:components="components.*">
	<fx:Script>
		<![CDATA[
			import com.squidzoo.eventSystem.EventCentral;
			import com.squidzoo.eventSystem.events.CustomDataEvent;
			
			import mx.events.FlexEvent;
			
			private var _imageFileName:String;
			[Bindable]
			private var _image:Bitmap;
			[Bindable]
			private var _imageWidth:int = 180;
			[Bindable]
			private var _imageHeight:int;
			
			protected function creationCompleteHandler(event:FlexEvent):void{
				_imageFileName = data.fileName;	
				_image = scaleBitmapData(data.image.bitmapData,_imageWidth);
				data.ir = this;
			}
			
			public function update(value:int):void{
				progressBar.update(value);	
			}
			
			private function onClickRemove():void{
				EventCentral.getInstance().dispatchEvent(new CustomDataEvent(CustomDataEvent.REMOVE_IMAGE_FROM_UPLOAD_LIST,null,null,_imageFileName));
			}
			
			private function scaleBitmapData(_bmd:BitmapData, 
											 targetContainerWidth:Number, targetContainerHeight:Number=0):Bitmap { 
				//set matrix sx & sy 
				var sx:Number = targetContainerWidth / _bmd.width; 
				var sy:Number = 0;
				
				if(targetContainerHeight==0){
					sy = sx;			
					targetContainerHeight = _bmd.height * sy;

				}else{
					sy = targetContainerHeight / _bmd.height; 				
				}

				//instantiate new matrix, and set scaling 
				var m:Matrix = new Matrix(); 
				m.scale(sx, sy); 
				
				//create new bitmapdata	
				var newBmd:BitmapData = new BitmapData(targetContainerWidth, targetContainerHeight); 
				//draw new bitmapdata with matrix	
				newBmd.draw(_bmd, m); 
				//create final bitmap with new bitmapdata 
				var newBmp:Bitmap = new Bitmap(newBmd); 
				//set smooting to true 
				newBmp.smoothing = true; 
								
				return newBmp; 
			}
			
			/*
			private function rotateBitmapData(_image:Bitmap, width:Number, height:Number):Bitmap
			{
				var m:Matrix = new Matrix();
				m.rotate(90);
				var newBmd:BitmapData = new BitmapData(height,width);//switched param places
				newBmd.draw(_image.bitmapData,m);
				var newBmp:Bitmap = new Bitmap(newBmd);
				newBmp.smoothing = true;
				
				return newBmp;
			}
			*/
			
			private function onUploadPercentageChange(event:Event):void
			{
				trace("change");
				progressBar.update(event.currentTarget.amount);	
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:SkinnableContainer skinClass="skins.UploadListItemRendererSkin">
		
	<s:VGroup left="5" top="5" bottom="5" right="5">
		<s:BitmapImage id="image" source="{_image}" horizontalCenter="0"/>
		<!--<s:Label id="debug" />-->
		<s:Label id="uploadStatusValue" text="{data.uploadStatus}" fontSize="14" color="0x666666"/>
		<!--<s:Label id="filename" text="{data.fileName}"/>-->
		<s:Label id="percentageUploaded" text="% {data.uploadPercentage}" fontSize="14" color="0x66666"/>
		<!--<s:Image id="progressBar" source="{data.progressBar}" />-->
		<components:ProgressBar id="progressBar"/>
		<s:Button skinClass="components.RemoveFromListXIcon" click="onClickRemove()"/>
	</s:VGroup>
	</s:SkinnableContainer>
</s:ItemRenderer>

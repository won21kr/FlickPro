<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" title="Main Menu"
		viewActivate="onViewActivate()"
		width="100%" height="100%">
	
	<fx:Script>
		<![CDATA[
			import com.squidzoo.ItemRenderers.calloutItemrenderers.MainMenuItemRenderer;
			
			import com.squidzoo.eventSystem.EventCentral;
			import com.squidzoo.eventSystem.events.CustomDataEvent;
			
			import mx.collections.ArrayCollection;
			import mx.core.FlexGlobals;
			
			import spark.components.IconItemRenderer;
			
			[Bindable]private var _dp:ArrayCollection = new ArrayCollection();
			
			private function onViewActivate():void
			{
				var sets:Object = new Object();
				sets.label = "Sets";
				sets.type = "sets";
				if(FlexGlobals.topLevelApplication.isTablet()){					
					sets.icon = "assets/images/v2/sets60.png";
					trace("60 icon");
				}else{
					trace("40 icon");
					sets.icon = "assets/images/v2/sets40.png";
				}
				_dp.addItem(sets);
				
				var stream:Object = new Object();
				stream.label = "Photostream";
				stream.type = "photostream";
				if(FlexGlobals.topLevelApplication.isTablet()){
					stream.icon = "assets/images/v2/photostream60.png";
				}else{
					stream.icon = "assets/images/v2/photostream40.png";
				}
				_dp.addItem(stream);
				
				var search:Object = new Object();
				search.label = "Search";
				search.type = "search";
				if(FlexGlobals.topLevelApplication.isTablet()){
					search.icon = "assets/images/v2/search60.png";
				}else{
					search.icon = "assets/images/v2/search40.png";
				}
				_dp.addItem(search);
				
				var upload:Object = new Object();
				upload.label = "Upload";
				upload.type = "upload";
				if(FlexGlobals.topLevelApplication.isTablet()){
					upload.icon = "assets/images/v2/upload60.png";
				}else{
					upload.icon = "assets/images/v2/upload40.png";
				}
				_dp.addItem(upload);
				
				var account:Object = new Object();
				account.label = "Change a/c";
				account.type = "account";
				if(FlexGlobals.topLevelApplication.isTablet()){
					account.icon = "assets/images/v2/changeAc60.png";
				}else{
					account.icon = "assets/images/v2/changeAc40.png";
				}
				_dp.addItem(account);
				
				var about:Object = new Object();
				about.label = "About";
				about.type = "about";
				if(FlexGlobals.topLevelApplication.isTablet()){
					about.icon = "assets/images/v2/about60.png";
				}else{
					about.icon = "assets/images/v2/about40.png";
				}
				_dp.addItem(about);
				
				var exit:Object = new Object();
				exit.label = "Exit app";
				exit.type = "exit";
				if(FlexGlobals.topLevelApplication.isTablet()){
					exit.icon = "assets/images/v2/exit60.png";
				}else{
					exit.icon = "assets/images/v2/exit40.png";
				}
				_dp.addItem(exit);
				
			}
			
			private function onClick():void
			{
				if(list.selectedIndex>-1)
				{					
					var selection:String = list.selectedItem.type;
				trace("selection: "+selection);
					EventCentral.getInstance().dispatchEvent(new CustomDataEvent(CustomDataEvent.MAIN_MENU_SELECTION,null,null,selection));
				}
			}
			
			private function chooseItemRenderer(item:Object):ClassFactory
			{
				var ir:Class = MainMenuItemRenderer;
				
				return new ClassFactory(ir);
			}
		]]>
	</fx:Script>	
	<s:VGroup width="100%" height="100%">
		<s:List id="list"
				width="100%"
				height="100%"
				dataProvider="{_dp}"
				itemRendererFunction="chooseItemRenderer"
				alternatingItemColors="{[0x111111,0x111111]}"
				click="onClick()"
				selectionColor="#222222"
				useVirtualLayout="false"
				contentBackgroundColor="#111111"/>
	</s:VGroup>
	
</s:View>
<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" xmlns:components="com.squidzoo.components.*"
		creationComplete="onCreationComplete(event)"
		title="Edit details for upload"
		width="400">
	
	<fx:Declarations>
		<s:RadioButtonGroup id="privacySetting" 
							itemClick="onPrivacySelection(event)"/>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import com.squidzoo.VOs.SettingsVO;
			
			import com.squidzoo.eventSystem.EventCentral;
			import com.squidzoo.eventSystem.events.CustomDataEvent;
			
			import mx.core.FlexGlobals;
			import mx.events.FlexEvent;
			
			import spark.transitions.SlideViewTransition;
			
			import com.squidzoo.statics.LatestUploadSettings;
			private var _title:String = "";
			private var _description:String = "";
			private var _tags:String = "";
			private var _isPublic:Boolean = false;
			private var _isFriend:Boolean = false;;
			private var _isFamily:Boolean = true;
			
			[Bindable]private var _containerWidth:int = FlexGlobals.topLevelApplication.stage.stageWidth - 80;
			[Bindable]private var _textInputWidth:int = FlexGlobals.topLevelApplication.stage.stageWidth - 120;
			[Bindable]
			private var _setTitle:String = "Please select a set.";
			
			protected function onCreationComplete(event:FlexEvent):void{
				
				if(data){
					if(data.title)titleInput.text = data.title;
					if(data.description)descriptionInput.text = data.description;
					if(data.tags) tagsInput.text = data.tags;
					if(data.visibility){
						
						if(data.visibility == "public"){
							_isPublic = true;
							_isFriend = false;
							_isFamily = false;
							publicValue.selected = true;
						}else if(data.visibility == "friend"){
							_isPublic = false;
							_isFriend = true;
							_isFamily = false;
							friendValue.selected = true;
						}else{
							_isPublic = false;
							_isFriend = false;
							_isFamily = true;
							familyValue.selected = true;
						}
					}
				}
			}

			private function onClickOK(event:Event):void{
				var settingsVO:SettingsVO = new SettingsVO();
				settingsVO.title = _title;
				settingsVO.description = _description;
				settingsVO.tags = _tags;
				settingsVO.is_public = _isPublic;
				settingsVO.is_family = _isFamily;
				settingsVO.is_friend = _isFriend;
				
				LatestUploadSettings.title = _title;
				LatestUploadSettings.description = _description;
				LatestUploadSettings.tags = _tags;
				LatestUploadSettings.isFamily = _isFamily;
				LatestUploadSettings.isFriend = _isFriend;
				LatestUploadSettings.isPublic = _isPublic;
				
				EventCentral.getInstance().dispatchEvent(new CustomDataEvent(CustomDataEvent.SETTINGS_SELECTED,null,null,null,null,null,settingsVO));
				navigator.popView();
			}
			
			private function onClickCancel(event:Event):void{
				navigator.popView();
			}
			
			private function onTitleChange(event:Event):void{
				_title = event.currentTarget.text;
			}
			
			private function onDescriptionChange(event:Event):void{
				_description = event.currentTarget.text;
			}
			
			private function onTagsChange(event:Event):void{
				_tags = event.currentTarget.text;
			}
			
			private function onPrivacySelection(event:Event):void{
				switch(event.currentTarget.selectedValue){
					case "family":
						_isFamily = true;
						_isFriend = false;
						_isPublic = false;
						break;
					case "friend":
						_isFamily = false;
						_isFriend = true;
						_isPublic = false;
						break;
					case "public":
						_isFamily = false;
						_isFriend = false;
						_isPublic = true;
						break;
				}
			}
			
			private function onClickUploadBreadCrumb():void{
				var slideEffect:SlideViewTransition = new SlideViewTransition();
				slideEffect.direction = "right";
				navigator.popView(slideEffect);
			}
			
		]]>
	</fx:Script>
		
	<s:VGroup width="100%" height="100%" gap="0" >
	<s:Scroller width="100%" height="100%">
		
		<s:VGroup width="100%" height="100%" 
				  horizontalAlign="center" verticalAlign="middle">
					
			<s:VGroup paddingBottom="10"
					  paddingLeft="10"
					  paddingRight="10"
					  paddingTop="10"
					  >			
					<s:Label text="Title" color="#ffffff"/>
					<s:TextInput id="titleInput" width="{_textInputWidth}" change="onTitleChange(event)"/>
					
					<s:Label text="Description" color="#ffffff"/>
					<s:TextInput id="descriptionInput" width="{_textInputWidth}" change="onDescriptionChange(event)"/>
					
					<s:Label text="Tags" color="#ffffff"/>
					<s:TextInput id="tagsInput" width="{_textInputWidth}" change="onTagsChange(event)"/>
					
					<s:VGroup color="#ffffff">	
						<s:RadioButton scaleX="0.9" scaleY="0.9" id="familyValue" group="{privacySetting}" value="family" label="family" />
						<s:RadioButton scaleX="0.9" scaleY="0.9" id="friendValue" group="{privacySetting}" value="friend" label="friend" />
						<s:RadioButton scaleX="0.9" scaleY="0.9" id="publicValue" group="{privacySetting}" value="public" label="public" />
					</s:VGroup>
					
					<s:HGroup right="20">
						<s:Button label="ok" width="100" click="onClickOK(event)" skinClass="com.squidzoo.skins.SquareButtonSkin"/>
						<s:Button label="cancel" click="onClickCancel(event)" skinClass="com.squidzoo.skins.SquareButtonSkin"/>
					</s:HGroup>
			</s:VGroup>
			
		</s:VGroup>
	</s:Scroller>
	</s:VGroup>	

</s:View>
